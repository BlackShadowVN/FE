--- Avatar trong sidebar ---

<div className="flex flex-col items-center space-y-4">
  <div className={`overflow-hidden ${user?.role === "admin" ? "border-4 border-[#DC143C]" : "border border-sidebar-border"}`}>
    <Avatar 
      name={user?.fullname}
      size="80"
      round={true}
    />
  </div>
  <div className="text-center">
    <h2 className="font-medium text-lg">{user?.fullname}</h2>
    <p className="text-sm text-muted-foreground">{user?.email}</p>
    {user?.phone && (
      <p className="text-sm text-muted-foreground mt-1">{user.phone}</p>
    )}
    {user?.role === "admin" && (
      <Badge variant="default" className="mt-2 bg-[#DC143C] hover:bg-[#DC143C]/90">Admin</Badge>
    )}
  </div>
</div>

--- Avatar trong profile ---

<div className="flex flex-col items-center mb-6">
  <div className={`overflow-hidden ${user?.role === "admin" ? "border-4 border-[#DC143C]" : "border border-sidebar-border"} mb-3`}>
    <Avatar 
      name={profileForm.watch('fullname') || user?.fullname}
      size="100"
      round={true}
    />
  </div>
  <div className="text-sm text-muted-foreground mb-6">
    Avatar được tạo tự động từ tên của bạn
  </div>
</div>

--- Xóa biến states ---

export default function ProfilePage() {
  const { user, isAuthenticated, token, updateUserInfo, logout } = useAuth()
  const router = useRouter()
  const { toast } = useToast()
  const [isLoading, setIsLoading] = useState(false)
  const [activeTab, setActiveTab] = useState("profile")
  const [orders, setOrders] = useState<Order[]>([])
  const [loadingOrders, setLoadingOrders] = useState(true)
} 